apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "node-exporter.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "node-exporter.labels" . | nindent 4 }}
    app.kubernetes.io/component: exporter
    app.kubernetes.io/part-of: kube-prometheus
spec:
  selector:
    matchLabels:
      {{- include "node-exporter.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: exporter
      app.kubernetes.io/part-of: kube-prometheus
  template:
    metadata:
      labels:
        {{- include "node-exporter.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: exporter
        app.kubernetes.io/part-of: kube-prometheus
    spec:
      containers:
        - args:
            - --web.listen-address=127.0.0.1:9100
            - --path.sysfs=/host/sys
            - --path.rootfs=/host/root
            - --no-collector.wifi
            - --no-collector.hwmon
            - --collector.filesystem.ignored-mount-points=^/(dev|proc|sys|var/lib/docker/.+|var/lib/kubelet/pods/.+)($|/)
            - --collector.netclass.ignored-devices=^(veth.*)$
            - --collector.netdev.device-exclude=^(veth.*)$
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          name: node-exporter
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /host/sys
              mountPropagation: HostToContainer
              name: sys
              readOnly: true
            - mountPath: /host/root
              mountPropagation: HostToContainer
              name: root
              readOnly: true
        - args:
            - --logtostderr
            - --secure-listen-address=[$(IP)]:9100
            - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
            - --upstream=http://127.0.0.1:9100/
          env:
            - name: IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          image: {{ .Values.rbacProxy.image.repository }}:{{ .Values.rbacProxy.image.tag }}
          name: kube-rbac-proxy
          ports:
            - containerPort: 9100
              hostPort: 9100
              name: https
          resources:
            {{- toYaml .Values.rbacProxyResources | nindent 12 }}
          securityContext:
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
      hostNetwork: true
      hostPID: true
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      serviceAccountName: {{ include "node-exporter.fullname" . }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      volumes:
        - hostPath:
            path: /sys
          name: sys
        - hostPath:
            path: /
          name: root
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 10%
    type: RollingUpdate
