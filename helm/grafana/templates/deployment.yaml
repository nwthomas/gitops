apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: grafana
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
  name: grafana
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.replicas | default 1 }}
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - env: []
        image: {{ .Values.image.repository | default "grafana/grafana" }}:{{ .Values.image.tag | default "latest" }}
        name: grafana
        ports:
        - containerPort: 3000
          name: http
        readinessProbe:
          httpGet:
            path: /api/health
            port: http
        resources:
          limits:
            cpu: {{ .Values.resources.limits.cpu | default "200m" }}
            memory: {{ .Values.resources.limits.memory | default "200Mi" }}
          requests:
            cpu: {{ .Values.resources.requests.cpu | default "100m" }}
            memory: {{ .Values.resources.requests.memory | default "100Mi" }}
        volumeMounts:
        - mountPath: /var/lib/grafana
          name: grafana-storage
          readOnly: false
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      securityContext:
        fsGroup: {{ .Values.securityContext.fsGroup | default 65534 }}
        runAsNonRoot: {{ .Values.securityContext.runAsNonRoot | default true }}
        runAsUser: {{ .Values.securityContext.runAsUser | default 65534 }}
      serviceAccountName: grafana
      volumes:
        - name: grafana-storage
          persistentVolumeClaim:
            claimName: longhorn-grafana-pvc
